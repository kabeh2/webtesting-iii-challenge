{"version":3,"sources":["redux/reducer/index.js","redux/actions/actionTypes.js","redux/store/index.js","display/Display.js","controls/Controls.js","dashboard/Dashboard.js","redux/actions/actionCreators.js","index.js"],"names":["initialState","locked","closed","reducer","state","action","type","store","createStore","devToolsEnhancer","Display","closedClass","lockedClass","className","data-testid","defaultProps","Controls","props","toggleLocked","toggleClosed","disabled","onClick","Dashboard","this","React","Component","connect","dispatch","ReactDOM","render","document","getElementById"],"mappings":"+NAEaA,EAAe,CAC1BC,QAAQ,EACRC,QAAQ,GAoBKC,EAjBQ,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACvD,OAAQA,EAAOC,MACb,ICTyB,gBDUvB,OAAO,eACFF,EADL,CAEEH,QAASG,EAAMH,SAEnB,ICbyB,gBDcvB,OAAO,eACFG,EADL,CAEEF,QAASE,EAAMF,SAEnB,QACE,OAAOE,IEhBAG,EAAQC,sBAAYL,EAASM,8B,uDCFpCC,EAAU,SAAC,GAAwB,IAAtBR,EAAqB,EAArBA,OAAQD,EAAa,EAAbA,OACnBU,EAAW,cAAUT,EAAS,UAAY,aAC1CU,EAAW,cAAUX,EAAS,UAAY,aAEhD,OACE,yBAAKY,UAAU,gBAAgBC,cAAY,qBACzC,yBAAKA,cAAY,cAAcD,UAAWD,GACvCX,EAAS,SAAW,YAEvB,yBAAKa,cAAY,gBAAgBD,UAAWF,GACzCT,EAAS,SAAW,UAM7BQ,EAAQK,aAAe,CACrBb,QAAQ,EACRD,QAAQ,GAGKS,QCIAM,EAzBE,SAAAC,GAAU,IACjBhB,EAA+CgB,EAA/ChB,OAAQC,EAAuCe,EAAvCf,OAAQgB,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aAEtC,OACE,yBAAKN,UAAU,iBAAiBC,cAAY,sBAC1C,4BACEA,cAAY,WACZM,UAAWlB,EACXmB,QAASH,EACTL,UAAU,cAETZ,EAAS,cAAgB,aAE5B,4BACEa,cAAY,YACZM,SAAUnB,EACVoB,QAASF,EACTN,UAAU,cAETX,EAAS,YAAc,gBCd1BoB,E,iLACM,IAAD,EACgDC,KAAKN,MAApDf,EADD,EACCA,OAAQD,EADT,EACSA,OAAQkB,EADjB,EACiBA,aAAcD,EAD/B,EAC+BA,aAEtC,OACE,oCACE,kBAAC,EAAD,CAASjB,OAAQA,EAAQC,OAAQA,IACjC,kBAAC,EAAD,CACED,OAAQA,EACRC,OAAQA,EACRgB,aAAcA,EACdC,aAAcA,S,GAXAK,IAAMC,WAgCfC,eAdS,SAAAtB,GACtB,MAAO,CACLH,OAAQG,EAAMH,OACdC,OAAQE,EAAMF,WAIS,SAAAyB,GACzB,MAAO,CACLT,aAAc,kBAAMS,EC/Bf,CACLrB,KLJyB,mBImCzBa,aAAc,kBAAMQ,EC1Bf,CACLrB,KLTyB,sBIsCdoB,CAA6CJ,GE9B5DM,IAASC,OACP,kBAAC,IAAD,CAAUtB,MAAOA,GACf,kBAAC,EAAD,OAEFuB,SAASC,eAAe,W","file":"static/js/main.1e233d84.chunk.js","sourcesContent":["import * as actionType from \"../actions/actionTypes\";\n\nexport const initialState = {\n  locked: false,\n  closed: false\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.TOGGLE_LOCKED:\n      return {\n        ...state,\n        locked: !state.locked\n      };\n    case actionType.TOGGLE_CLOSED:\n      return {\n        ...state,\n        closed: !state.closed\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const TOGGLE_LOCKED = \"TOGGLE_LOCKED\";\nexport const TOGGLE_CLOSED = \"TOGGLE_CLOSED\";\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport reducer from \"../reducer\";\n\nexport const store = createStore(reducer, devToolsEnhancer());\n","import React from \"react\";\n\nconst Display = ({ closed, locked }) => {\n  const closedClass = `led ${closed ? \"red-led\" : \"green-led\"}`;\n  const lockedClass = `led ${locked ? \"red-led\" : \"green-led\"}`;\n\n  return (\n    <div className=\"display panel\" data-testid=\"display-component\">\n      <div data-testid=\"lock-status\" className={lockedClass}>\n        {locked ? \"Locked\" : \"Unlocked\"}\n      </div>\n      <div data-testid=\"closed-status\" className={closedClass}>\n        {closed ? \"Closed\" : \"Open\"}\n      </div>\n    </div>\n  );\n};\n\nDisplay.defaultProps = {\n  closed: false,\n  locked: false\n};\n\nexport default Display;\n","import React from \"react\";\n\nconst Controls = props => {\n  const { locked, closed, toggleLocked, toggleClosed } = props;\n\n  return (\n    <div className=\"controls panel\" data-testid=\"controls-component\">\n      <button\n        data-testid=\"lock-btn\"\n        disabled={!closed}\n        onClick={toggleLocked}\n        className=\"toggle-btn\"\n      >\n        {locked ? \"Unlock Gate\" : \"Lock Gate\"}\n      </button>\n      <button\n        data-testid=\"close-btn\"\n        disabled={locked}\n        onClick={toggleClosed}\n        className=\"toggle-btn\"\n      >\n        {closed ? \"Open Gate\" : \"Close Gate\"}\n      </button>\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Display from \"../display/Display\";\nimport Controls from \"../controls/Controls\";\nimport { toggleLocked, toggleClosed } from \"../redux/actions/actionCreators\";\n\nclass Dashboard extends React.Component {\n  render() {\n    const { closed, locked, toggleClosed, toggleLocked } = this.props;\n\n    return (\n      <>\n        <Display locked={locked} closed={closed} />\n        <Controls\n          locked={locked}\n          closed={closed}\n          toggleLocked={toggleLocked}\n          toggleClosed={toggleClosed}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    locked: state.locked,\n    closed: state.closed\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleLocked: () => dispatch(toggleLocked()),\n    toggleClosed: () => dispatch(toggleClosed())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import * as actionType from \"./actionTypes\";\n\nexport const toggleLocked = () => {\n  return {\n    type: actionType.TOGGLE_LOCKED\n  };\n};\n\nexport const toggleClosed = () => {\n  return {\n    type: actionType.TOGGLE_CLOSED\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\n\nimport Dashboard from \"./dashboard/Dashboard\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Dashboard />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}